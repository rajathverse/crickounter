AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFront + S3 static site for crickounter.rajathverse.com

Parameters:
  SubDomainName:
    Type: String
    Default: "crickounter.rajathverse.com"
  HostedZoneName:
    Type: String
    Default: "rajathverse.com."
  BucketName:
    Type: String
    Default: "crickounter"

Resources:
  # S3 Bucket for static website hosting
  CrickounterBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      WebsiteConfiguration:
        IndexDocument: scorecard.html
        ErrorDocument: scorecard.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # S3 Bucket Policy to allow public read access
  CrickounterBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CrickounterBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${CrickounterBucket}/*"

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: CrickounterBucketPolicy
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: "Static site for crickounter.rajathverse.com"
        Aliases:
          - !Ref SubDomainName
        DefaultRootObject: scorecard.html
        Origins:
          - Id: crickounter-origin
            DomainName: !Sub "${CrickounterBucket}.s3-website.${AWS::Region}.amazonaws.com"
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: crickounter-origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:470822488892:certificate/8d59641a-4277-458d-9710-adee5c722316
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        PriceClass: PriceClass_All
        HttpVersion: http2
        IPV6Enabled: true

  # Route 53 DNS Record
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZoneName
      Name: !Ref SubDomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront hosted zone ID (global)

Outputs:
  BucketName:
    Description: "S3 Bucket name"
    Value: !Ref CrickounterBucket
    
  BucketWebsiteURL:
    Description: "S3 bucket website URL"
    Value: !GetAtt CrickounterBucket.WebsiteURL
    
  CloudFrontDomain:
    Description: "CloudFront distribution domain"
    Value: !GetAtt CloudFrontDistribution.DomainName
    
  CloudFrontDistributionId:
    Description: "CloudFront distribution ID"
    Value: !Ref CloudFrontDistribution
    
  WebsiteURL:
    Description: "Website URL"
    Value: !Sub "https://${SubDomainName}"
